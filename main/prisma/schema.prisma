// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init



datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
 
generator client {
  provider = "prisma-client-js"
}
 
model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  username      String?         @db.String
  email         String?         @db.String @unique
  password      String?         @db.String      
  emailVerified DateTime?       @db.Timestamp
  image         String?         @db.String
  accounts      Account[]
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
 
model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String  @db.String
  provider          String  @db.String
  providerAccountId String  @db.String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String? @db.String
  scope             String? @db.String
  id_token          String? @db.String
  session_state     String? @db.String
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
}
 
 
model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String   @db.String
  token      String   @db.String
  expires    DateTime @db.Timestamp
 
  @@unique([identifier, token])
}
 
